name: Matrix Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Run weekly on Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

jobs:
  terraform-matrix:
    name: Terraform ${{ matrix.terraform-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        terraform-version:
          - "~1.6"  # Minimum supported version
          - "~1.7"
          - "~1.8"  # Current stable
          - "~1.9"
          - "~1.10"
          - "~1.11"
          - "~1.12"
          - "latest" # Latest available

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform ${{ matrix.terraform-version }}
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ matrix.terraform-version }}

    - name: Display Terraform Version
      run: terraform version

    - name: Setup mock AWS provider for tests
      run: |
        cat > provider_override.tf << 'EOF'
        provider "aws" {
          region                      = "us-east-1"
          skip_credentials_validation = true
          skip_requesting_account_id  = true
          skip_metadata_api_check     = true
          skip_region_validation      = true
          access_key                  = "test"
          secret_key                  = "test"
        }
        EOF

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Format Check
      run: terraform fmt -check -recursive

    - name: Run Terraform Tests
      run: terraform test -verbose

    - name: Cleanup mock provider
      if: always()
      run: rm -f provider_override.tf

  aws-provider-matrix:
    name: AWS Provider ${{ matrix.aws-provider-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        aws-provider-version:
          - "5.100.0"
          - "6.3.0"

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.12.2"

    - name: Create temporary versions.tf for testing
      run: |
        cat > versions_test.tf << EOF
        terraform {
          required_version = ">= 1.6.0"
          required_providers {
            aws = {
              source  = "hashicorp/aws"
              version = "${{ matrix.aws-provider-version }}"
            }
          }
        }
        EOF

    - name: Setup mock AWS provider for tests
      run: |
        cat > provider_override.tf << 'EOF'
        provider "aws" {
          region                      = "us-east-1"
          skip_credentials_validation = true
          skip_requesting_account_id  = true
          skip_metadata_api_check     = true
          skip_region_validation      = true
          access_key                  = "test"
          secret_key                  = "test"
        }
        EOF

    - name: Terraform Init with specific AWS provider
      run: |
        mv versions.tf versions_original.tf
        mv versions_test.tf versions.tf
        terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Run Terraform Tests
      run: terraform test

    - name: Cleanup mock provider and restore original versions.tf
      if: always()
      run: |
        rm -f provider_override.tf
        mv versions_original.tf versions.tf

name: Manual Test

on:
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - validation
          - security
          - examples
      terraform_version:
        description: 'Terraform version to use'
        required: true
        default: '1.12.2'
        type: string
      enable_debug:
        description: 'Enable debug output'
        required: false
        default: false
        type: boolean

jobs:
  manual-test:
    name: Manual Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "~${{ inputs.terraform_version }}"

    - name: Display Terraform Version
      run: terraform version

    - name: Enable Debug
      if: inputs.enable_debug
      run: |
        echo "ACTIONS_STEP_DEBUG=true" >> $GITHUB_ENV
        echo "Debug mode enabled"

    - name: Setup mock AWS provider for tests
      if: inputs.test_type == 'all' || inputs.test_type == 'validation'
      run: |
        cat > provider_override.tf << 'EOF'
        provider "aws" {
          region                      = "us-east-1"
          skip_credentials_validation = true
          skip_requesting_account_id  = true
          skip_metadata_api_check     = true
          skip_region_validation      = true
          access_key                  = "test"
          secret_key                  = "test"
        }
        EOF

    - name: Run Validation Tests
      if: inputs.test_type == 'all' || inputs.test_type == 'validation'
      run: |
        echo "🔍 Running Validation Tests..."
        terraform fmt -check -recursive .
        terraform init
        terraform validate

        # Run tests with verbose output
        terraform test -verbose

        # Generate test report (reuse the same provider setup)
        terraform test -junit-xml=test-results.xml

        echo "✅ Validation tests completed"
      continue-on-error: true

    - name: Run Security Tests
      if: inputs.test_type == 'all' || inputs.test_type == 'security'
      run: |
        echo "🔒 Running Security Tests..."
        # Setup mock provider for security tests
        cat > provider_override.tf << 'EOF'
        provider "aws" {
          region                      = "us-east-1"
          skip_credentials_validation = true
          skip_requesting_account_id  = true
          skip_metadata_api_check     = true
          skip_region_validation      = true
          access_key                  = "test"
          secret_key                  = "test"
        }
        EOF

        # Initialize Terraform for security scan
        terraform init

        # Install tfsec
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
        tfsec .
        echo "✅ Security tests completed"

    - name: Cleanup mock provider files
      if: always()
      run: rm -f provider_override.tf

    - name: Upload Test Results
      if: always() && (inputs.test_type == 'all' || inputs.test_type == 'validation')
      uses: actions/upload-artifact@v4
      with:
        name: manual-test-results
        path: test-results.xml

    - name: Test Summary
      run: |
        echo "## Test Summary"
        echo "- Test Type: ${{ inputs.test_type }}"
        echo "- Terraform Version: ${{ inputs.terraform_version }}"
        echo "- Debug Mode: ${{ inputs.enable_debug }}"
        echo "- Status: ✅ Completed"
        echo ""
        echo "Check the logs above for detailed results."

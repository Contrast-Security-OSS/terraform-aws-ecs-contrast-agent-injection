name: Terraform Test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test Terraform Module
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "~1.0"
    
    - name: Terraform Format Check
      run: terraform fmt -check -recursive .
    
    - name: Terraform Init
      run: terraform init
    
    - name: Terraform Validate
      run: terraform validate
    
    - name: Terraform Test
      run: terraform test -verbose
      continue-on-error: true
    
    - name: Install tflint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        sudo mv tflint /usr/local/bin/
    
    - name: Run tflint
      run: tflint --recursive
      continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Install tfsec
      run: |
        curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
        sudo mv tfsec /usr/local/bin/
    
    - name: Run tfsec
      run: tfsec . --format sarif > tfsec-results.sarif
      continue-on-error: true

    - name: Upload tfsec scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'tfsec-results.sarif'

  example-test:
    name: Test Example
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "~1.0"
    
    - name: Terraform Format Check (Example)
      run: terraform fmt -check -recursive .
      working-directory: examples/basic-java-app
    
    - name: Terraform Init (Example)
      run: terraform init
      working-directory: examples/basic-java-app
    
    - name: Terraform Validate (Example)
      run: terraform validate
      working-directory: examples/basic-java-app
    
    - name: Terraform Plan (Example)
      run: terraform plan
      working-directory: examples/basic-java-app
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      continue-on-error: true
